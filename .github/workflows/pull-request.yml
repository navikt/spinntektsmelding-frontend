name: Bygg pull request

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: pr-${{ github.event.pull_request.head.repo.full_name }}-${{ github.event.pull_request.head.ref }}
  cancel-in-progress: true

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

jobs:
  # Shared setup job to cache dependencies once
  setup:
    runs-on: ubuntu-latest
    outputs:
      yarn-cache-key: ${{ steps.yarn-cache.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: "24.0"
          registry-url: "https://npm.pkg.github.com"

      - name: Enable corepack
        run: corepack enable

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache Yarn dependencies
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            .yarn/install-state.gz
            .yarn/build-state.yml
            .yarn/unplugged
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable --inline-builds

  Bygg:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: "24.0"
          registry-url: "https://npm.pkg.github.com"

      - name: Enable corepack
        run: corepack enable

      - name: Restore Yarn cache
        uses: actions/cache/restore@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            .yarn/build-state.yml
            .yarn/unplugged
          key: ${{ needs.setup.outputs.yarn-cache-key }}

      - name: Install dependencies
        run: yarn install --immutable --inline-builds --immutable-cache

      - name: Cache Next.js
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('**/yarn.lock', '**/next.config.js') }}-${{ hashFiles('**/*.ts', '**/*.tsx', '**/*.js', '**/*.jsx', '!**/node_modules/**', '!**/.next/**') }}
          restore-keys: |
            ${{ runner.os }}-next-${{ hashFiles('**/yarn.lock', '**/next.config.js') }}-
            ${{ runner.os }}-next-

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v4
        with:
          name: spinntektsmelding-frontend-artifact
          path: ${{ github.workspace }}/build/**/*
          retention-days: 1

  Kodekvalitet:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v5
        with:
          node-version: "24.0"
          registry-url: "https://npm.pkg.github.com"

      - name: Enable corepack
        run: corepack enable

      - name: Restore Yarn cache
        uses: actions/cache/restore@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            .yarn/build-state.yml
            .yarn/unplugged
          key: ${{ needs.setup.outputs.yarn-cache-key }}

      - name: Install dependencies
        run: yarn install --immutable --inline-builds --immutable-cache

      - name: Cache Vitest
        uses: actions/cache@v4
        with:
          path: |
            node_modules/.vitest
            node_modules/.vite
          key: ${{ runner.os }}-vitest-${{ hashFiles('**/yarn.lock', '**/vitest.config.*') }}-${{ hashFiles('**/__tests__/**', '**/*.test.*', '**/*.spec.*') }}
          restore-keys: |
            ${{ runner.os }}-vitest-${{ hashFiles('**/yarn.lock', '**/vitest.config.*') }}-
            ${{ runner.os }}-vitest-

      - name: Run tests with coverage
        run: yarn test --coverage

      - name: SonarCloud Scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Eslint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: "24.0"
          registry-url: "https://npm.pkg.github.com"

      - name: Enable corepack
        run: corepack enable

      - name: Restore Yarn cache
        uses: actions/cache/restore@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            .yarn/build-state.yml
            .yarn/unplugged
          key: ${{ needs.setup.outputs.yarn-cache-key }}

      - name: Install dependencies
        run: yarn install --immutable --inline-builds --immutable-cache

      - name: Cache ESLint
        uses: actions/cache@v4
        with:
          path: |
            node_modules/.cache/eslint
            .eslintcache
          key: ${{ runner.os }}-eslint-${{ hashFiles('**/yarn.lock', '**/.eslintrc*', '**/eslint.config.*') }}-${{ hashFiles('**/*.ts', '**/*.tsx', '**/*.js', '**/*.jsx', '!**/node_modules/**') }}
          restore-keys: |
            ${{ runner.os }}-eslint-${{ hashFiles('**/yarn.lock', '**/.eslintrc*', '**/eslint.config.*') }}-
            ${{ runner.os }}-eslint-

      - name: Run ESLint
        run: yarn lint --cache

  Knip:
    if: ${{ github.actor != 'dependabot[bot]' }}
    needs: setup
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      checks: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: "24.0"
          registry-url: "https://npm.pkg.github.com"

      - name: Enable corepack
        run: corepack enable

      - name: Restore Yarn cache
        uses: actions/cache/restore@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            .yarn/build-state.yml
            .yarn/unplugged
          key: ${{ needs.setup.outputs.yarn-cache-key }}

      - name: Install dependencies
        run: yarn install --immutable --inline-builds --immutable-cache

      - uses: codex-/knip-reporter@v2
